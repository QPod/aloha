__all__ = ('Application',)

import tornado.ioloop

from .web import WebApplication
from ..settings import SETTINGS

# import asyncio
# from ..logger import LOG
# try:
#     import uvloop
#     from tornado.platform.asyncio import AsyncIOMainLoop
#
#     asyncio.set_event_loop_policy(uvloop.EventLoopPolicy())
#     AsyncIOMainLoop().install()
#
#     LOG.info('Using uvloop for service event loop...')
# except ImportError:
#     LOG.warn('[uvloop] NOT installed, fallback to asyncio loop! Please `pip install uvloop`!')


io_loop = tornado.ioloop.IOLoop.current()


class Application:
    def __init__(self, *args, **kwargs):
        settings = dict(SETTINGS.config)
        self.web_app = WebApplication(settings)
        # self.io_loop = asyncio.get_event_loop()
        self.io_loop = io_loop

    def start(self):
        try:
            self.web_app.start()
            # self.io_loop.run_forever()
            self.io_loop.start()
        except KeyboardInterrupt:
            pass
        except Exception as e:
            raise e
        finally:
            pass

    def stop(self):
        # def _stop():
        #    self.io_loop.stop()
        # self.io_loop.call_soon(_stop)
        self.io_loop.stop
